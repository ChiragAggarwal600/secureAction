version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: walmart-cybersecurity-db
    environment:
      POSTGRES_DB: walmart_cybersecurity
      POSTGRES_USER: walmart_user
      POSTGRES_PASSWORD: walmart_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - walmart-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: walmart-cybersecurity-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - walmart-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: walmart-cybersecurity-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://walmart_user:walmart_pass@postgres:5432/walmart_cybersecurity?schema=public
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-key-min-32-characters}
      REFRESH_TOKEN_SECRET: ${REFRESH_TOKEN_SECRET:-your-refresh-token-secret-key-min-32-characters}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
      BCRYPT_ROUNDS: 12
      LOG_LEVEL: info
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - walmart-network
    restart: unless-stopped
    volumes:
      - app_logs:/app/logs
      - app_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: walmart-cybersecurity-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - walmart-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local

networks:
  walmart-network:
    driver: bridge
